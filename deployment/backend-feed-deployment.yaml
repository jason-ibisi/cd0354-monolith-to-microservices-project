# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: feed
spec:
  selector:
    matchLabels:
      run: feed
  replicas: 2
  template:
    metadata:
      labels:
        run: feed
    spec:
      containers:
      - name: feed
        image: docker.io/ja50n/udagram-api-feed:v1
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: '64Mi'
            cpu: '250m'
          limits:
            memory: '1024Mi'
            cpu: '500m'
        env:
        - name: url
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: url
        - name: aws_bucket
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: aws_bucket
        - name: aws_profile
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: aws_profile
        - name: aws_region
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: aws_region
        - name: jwt_secret
          valueFrom:
            configMapKeyRef:
              name: env-secret
              key: jwt_secret
        - name: postgres_db
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: postgres_db
        - name: postgres_host
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: postgres_host
        - name: postgres_password
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: postgres_password
        - name: postgres_username
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: postgres_username
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws/"
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret

# Service
apiVersion: v1
kind: Service
metadata:
  labels:
    service: feed
  name: feed
spec:
  ports:
    - name: '8080'
      port: 8080
      targetPort: 8080
  selector:
    service: feed
